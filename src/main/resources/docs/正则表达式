解析的思想：
栈中的一切字符都是经过脱/处理，栈中如果出现正则字符，一定都是脱/的。

遇到])}，启动出栈入栈
遇到.不处理，放到])}处理，因为不知道是连接还是或，在外边是连接在[.]是或的意思
\在外边处理，等])}时，已经处理完成，所以])}串里只剩下基本字符和状态机

总结[]:
在[]内特殊字符，表示匹配特殊字符本身，不需要加反斜杠.
在[]外特殊字符，表示匹配特殊字符本身，必须要加反斜杠
在[]内特殊字符，如果前边加反斜杠.则需要转义
只要在在[]内的特殊字符,都是原值，不管加不加()

总结/：
[\u4e00-\u9fa5]

总结^:
方位符，目前思考逻辑：在正则表达式中，要不出现在开始，要不出现在[]中，不能出现在中间，除非转义


.转义，可以解析的状态有：
在正则表达式开头,生成状态机；
在[]内,在[开头生成状态机，在[内和栈中前一个字符的状态机相连生成状态机；
在\后，生成状态机；
如果不在[]内,和前一个字符的状态机相连生成状态机；
.不应该在{}内。
----------------------------------------------------------------------
^正则表达式的首位，默认不处理；
^必须在[]中排首位
^不能再{}中
----------------------------------------------------------------------
$不能放在正则表达式首位
在[]内,在[开头生成状态机，在[内和栈中前一个字符的状态机相连生成状态机；
如果不在[]内,不应该在末尾
$不应该在{}内
----------------------------------------------------------------------
\在正则表达式开头,将当前字符的下一个生成状态机；
在[]内,在[开头生成状态机，在[内和前一个字符的状态机相连生成状态机；
如果不在[]内,将当前字符的下一个字符生成状态机并和栈中前一个字符的状态机相连生成状态机；
\不应该在{}内
----------------------------------------------------------------------
----------------------------------------------------------------------
L，如果碰到字符，先判断在不在[]内,判断是不是dash，
检查max，有没有满，满了自动清理，防止下次填充覆盖。
{内的第一个字母也要建立虚拟机


